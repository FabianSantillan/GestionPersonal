//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SARH.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SARHContext : DbContext
    {
        public SARHContext()
            : base("name=SARHContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CATAAños> CATAAños { get; set; }
        public virtual DbSet<CATAAreasEstructural> CATAAreasEstructural { get; set; }
        public virtual DbSet<CATAAreasFuncional> CATAAreasFuncional { get; set; }
        public virtual DbSet<CATACarreras> CATACarreras { get; set; }
        public virtual DbSet<CATACategoria> CATACategoria { get; set; }
        public virtual DbSet<CATACodigosPlaza> CATACodigosPlaza { get; set; }
        public virtual DbSet<CATAEstatus> CATAEstatus { get; set; }
        public virtual DbSet<CATAEstatusPlaza> CATAEstatusPlaza { get; set; }
        public virtual DbSet<CATAMotivoBaja> CATAMotivoBaja { get; set; }
        public virtual DbSet<CATAMovimientos> CATAMovimientos { get; set; }
        public virtual DbSet<CATANivelPuesto> CATANivelPuesto { get; set; }
        public virtual DbSet<CATANombreEscuela> CATANombreEscuela { get; set; }
        public virtual DbSet<CATAParents> CATAParents { get; set; }
        public virtual DbSet<CATAPuestos> CATAPuestos { get; set; }
        public virtual DbSet<CATASituacionAcademica> CATASituacionAcademica { get; set; }
        public virtual DbSet<CATATipoCorreo> CATATipoCorreo { get; set; }
        public virtual DbSet<CATATipoModulo> CATATipoModulo { get; set; }
        public virtual DbSet<CATATipoMovimientoBitacora> CATATipoMovimientoBitacora { get; set; }
        public virtual DbSet<CATATipoNivelPuesto> CATATipoNivelPuesto { get; set; }
        public virtual DbSet<CATATipoPlaza> CATATipoPlaza { get; set; }
        public virtual DbSet<CATATipoPlazaNuevo> CATATipoPlazaNuevo { get; set; }
        public virtual DbSet<CATATipoTelefono> CATATipoTelefono { get; set; }
        public virtual DbSet<Correos> Correos { get; set; }
        public virtual DbSet<DatosCredencialInstitucional> DatosCredencialInstitucional { get; set; }
        public virtual DbSet<HistorialAltasBajasPersonas> HistorialAltasBajasPersonas { get; set; }
        public virtual DbSet<HistorialPerPlazas> HistorialPerPlazas { get; set; }
        public virtual DbSet<NumeroContacto> NumeroContacto { get; set; }
        public virtual DbSet<PermisosModulo> PermisosModulo { get; set; }
        public virtual DbSet<Personal> Personal { get; set; }
        public virtual DbSet<PersonalNew> PersonalNew { get; set; }
        public virtual DbSet<Plazas> Plazas { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<CATADirecionesArea> CATADirecionesArea { get; set; }
        public virtual DbSet<CATANivelEstudios> CATANivelEstudios { get; set; }
        public virtual DbSet<HistorialAcademico> HistorialAcademico { get; set; }
        public virtual DbSet<V_DetallePersonal> V_DetallePersonal { get; set; }
        public virtual DbSet<V_PlazasVacantes> V_PlazasVacantes { get; set; }
    
        public virtual int sp_AltaPersonal2(string aPaterno, string aMaterno, string nombres, Nullable<System.DateTime> fNacimiento, string rFC, string homoclave, string curp, Nullable<System.DateTime> fIngresoinst, Nullable<byte> espapaomama)
        {
            var aPaternoParameter = aPaterno != null ?
                new ObjectParameter("APaterno", aPaterno) :
                new ObjectParameter("APaterno", typeof(string));
    
            var aMaternoParameter = aMaterno != null ?
                new ObjectParameter("AMaterno", aMaterno) :
                new ObjectParameter("AMaterno", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var fNacimientoParameter = fNacimiento.HasValue ?
                new ObjectParameter("FNacimiento", fNacimiento) :
                new ObjectParameter("FNacimiento", typeof(System.DateTime));
    
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var homoclaveParameter = homoclave != null ?
                new ObjectParameter("Homoclave", homoclave) :
                new ObjectParameter("Homoclave", typeof(string));
    
            var curpParameter = curp != null ?
                new ObjectParameter("Curp", curp) :
                new ObjectParameter("Curp", typeof(string));
    
            var fIngresoinstParameter = fIngresoinst.HasValue ?
                new ObjectParameter("FIngresoinst", fIngresoinst) :
                new ObjectParameter("FIngresoinst", typeof(System.DateTime));
    
            var espapaomamaParameter = espapaomama.HasValue ?
                new ObjectParameter("Espapaomama", espapaomama) :
                new ObjectParameter("Espapaomama", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AltaPersonal2", aPaternoParameter, aMaternoParameter, nombresParameter, fNacimientoParameter, rFCParameter, homoclaveParameter, curpParameter, fIngresoinstParameter, espapaomamaParameter);
        }
    }
}
